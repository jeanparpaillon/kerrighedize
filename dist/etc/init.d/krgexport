#!/bin/sh

### BEGIN INIT INFO
# Provides:          krgexport
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     S
# Default-Stop:      
# Short-Description: Export fs and kernel for Kerrighed nodes
# Description:       Export fs and kernel for Kerrighed nodes through NFS
### END INIT INFO

# What is this?
DESC="Export fs and kernels for Kerrighed nodes"
PREFIX=/usr

. /lib/init/kerrighed-functions

is_kerrighed_kernel || exit 0
is_kerrighed_boot || exit 0

# Read config
DEFAULTFILE=/etc/default/krgexport
if [ -f $DEFAULTFILE ]; then
    . $DEFAULTFILE
fi

# PXE boot file
bootfile=/srv/tftp/pxelinux.cfg/default

# NFS export options
nfsif=${nfsif:-$(ip route | awk '/^default/ { print $5 }')}
nfsserver=$(ip addr show dev $nfsif | sed '/^\s\+inet /!d; s/^\s\+inet \([0-9\.]\+\)\/.*/\1/')
networks="$(ip route | grep -v ^default | awk '{ print $1 }') 127.0.0.1/32"
exportopts="sync,no_subtree_check,no_root_squash"
dftmountnfsopts="sync,rsize=4096,wsize=4096"

. /lib/lsb/init-functions

do_exportfs()
{
	#
        # Read /etc/fstab:
	#    - exports real local filesystems in /etc/exports.krg file for NFS export
	#    - transform local fs to nfs mounts in /etc/fstab.krg file for further remounting on localhost
        #    - put exported fs + pseudo fs in /etc/fstab.diskless for diskless clients
	#
	msg="# Generated by /etc/init.d/krgnfsexport"
	echo $msg > /etc/exports.krg
	echo $msg > /etc/fstab.krg
	echo $msg > /etc/fstab.diskless

	exec 9<&0 </etc/fstab

	while read DEV MTPT FSTYPE OPTS DUMP PASS JUNK
	do
	    exportfs=0
	    pseudofs=0
	    exportrw="rw"
	    mountnfsopts=

	    case "$DEV" in
		""|\#*)
		    continue
		    ;;
		/dev/*)
		    exportfs=1
		    ;;
		LABEL=*|UUID=*)
		    exportfs=1
		    ;;
		*)
		    ;;
	    esac

	    # Deal with specific FS
	    case "$FSTYPE" in
		proc|configfs)
		    pseudofs=1
		    exportfs=0
		    ;;
		swap)
		    exportfs=0
		    ;;
	    esac		    
		
	    for opt in $(echo $OPTS | tr ',' ' '); do
		case "$opt" in
		    async,sync)
			;;
		    noauto)
	                # Do not export noauto fs
			exportfs=0
			;;
		    ro)
			exportrw="ro"
			;;
		    rw)
			exportrw="rw"
			;;
		    atime|noatime|context=*|fscontext=*|defcontext=*|rootcontext=*|defaults|dev|nodev|diratime|nodiratime|dirsync|exec|noexec|group|encryption|keybits|noiversion|mand|nomand|relatime|strictatime|nostrictatime|suid|nosuid|owner|user|nouser|users)
			# These FS independant options are passed to NFS mount options
			mountnfsopts=${mountnfsopts:+$mountnfsopts,$opt}
			;;
		    _netdev|remount)
			# These FS independant options are simply ignored
			;;
		    *)
			# Others are ignored... too
			;;
		esac
	    done

	    if [ $exportfs -eq 1 ]; then
		line="$MTPT $MTPT nfs ${dftmountnfsopts}${mountnfsopts:+,$mountnfsopts} 0 0"

	        # Write entry in /etc/fstab.krg
		echo "127.0.0.1:$line" >> /etc/fstab.krg

		# Write entry in /etc/fstab.diskless, excluding /
		[ "$MTPT" = "/" ] ||  echo "$nfsserver:$line" >> /etc/fstab.diskless

	        # Write entry in /etc/exports.krg
		for network in $networks; do
		    echo "$MTPT $network($exportopts,$exportrw)" >> /etc/exports.krg
		done
	    fi

	    if [ $pseudofs -eq 1 ]; then
		echo "$DEV $MTPT $FSTYPE $OPTS $DUMP $PASS" >> /etc/fstab.diskless
	    fi
	done

	exec 0<&9 9<&-

	log_end_msg $RET
}

do_pxeboot()
{
    log_daemon_msg "Preparing PXE boot file"

    for word in $(cat /proc/cmdline); do
	case "$word" in
	    session_id=*)
		session_id=$(echo $word | cut -d'=' -f2)
		;;
	esac
    done

    if [ "/srv/tftp/vmlinuz-krg" != "$kernel" ]; then
	ln -fs $kernel /srv/tftp/vmlinuz-krg
    fi
    if [ "/srv/tftp/initrd.img-krg" != "$initrd" ]; then
	ln -fs $initrd /srv/tftp/initrd.img-krg
    fi

    (
	echo "default kerrighed";
	echo "label kerrighed";
	echo "kernel vmlinuz-krg";
	echo "append initrd=initrd.img-krg rw root=/dev/nfs nfsroot=$nfsserver:/,$nfsrootopts ip=dhcp session_id=$session_id autonodeid=1 init=/sbin/init-krg $bootopts"
    ) > $bootfile

    log_success_msg
}

# See how we were called.
case "$1" in
  start)
	if [ ! -f /etc/init.d/nfs-kernel-server ]; then
	    log_progress_msg "no NFS server"
	    log_end_msg 1
	    exit 1
	fi

	do_exportfs
	do_pxeboot

	# Replace temporarily (bind mount) /etc/exports with /etc/exports.krg
	mount -o bind /etc/exports.krg /etc/exports
	/etc/init.d/nfs-kernel-server start
	RET=$?
	# Umount (necessary ?) /etc/export
	umount /etc/exports
	;;

  stop|reload|force-reload|restart)
	if [ -f /etc/exports.krg ]; then
	    mount -o bind /etc/exports.krg /etc/exports
	    /etc/init.d/nfs-kernel-server $1
	    umount /etc/exports
	fi
	;;

  status)
	if [ -f /etc/exports.krg ]; then
	    mount -o bind /etc/exports.krg /etc/exports
	    /etc/init.d/nfs-kernel-server status
	    umount /etc/exports
	else
	    log_warning_msg "No /etc/exports.krg file"
	fi
	;;

  *)
	log_success_msg "Usage: krgnfsexport {start|stop|status|reload|force-reload|restart}"
	exit 1
	;;
esac

exit 0
