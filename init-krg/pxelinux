#! /bin/sh
### BEGIN INIT INFO
# Provides:          pxelinux
# Required-Start:    atftpd
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: pxelinux boot file
# Description:       Build a pxelinux boot file for other nodes
### END INIT INFO

# Author: Jean Parpaillon <jean.parpaillon@kerlabs.com>
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="pxelinux boot file"
NAME=pxelinux
SCRIPTNAME=/etc/kerrighed/init.d/$NAME
DEFAULT=/etc/kerrighed/$NAME.conf

bootfile=/srv/tftp/pxelinux.cfg/default

# Read configuration variable file if it is present
[ -r $DEFAULT ] && . $DEFAULT

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    for word in $(cat /proc/cmdline); do
	case "$word" in
	    session_id=*)
		session_id=$(echo $word | cut -d'=' -f2)
		;;
	esac
    done

    nfsif=${nfsif:-$(ip route | awk '/^default/ { print $5 }')}
    nfsserver=$(ip addr show dev $nfsif | sed '/^\s\+inet /!d; s/^\s\+inet \([0-9\.]\+\)\/.*/\1/')

    if [ "/srv/tftp/vmlinuz-krg" != "$kernel" ]; then
	ln -fs $kernel /srv/tftp/vmlinuz-krg
    fi
    if [ "/srv/tftp/initrd.img-krg" != "$initrd" ]; then
	ln -fs $initrd /srv/tftp/initrd.img-krg
    fi

    (
	echo "default kerrighed";
	echo "label kerrighed";
	echo "kernel vmlinuz-krg";
	echo "append initrd=initrd.img-krg rw root=/dev/nfs nfsroot=$nfsserver:/,$nfsrootopts ip=dhcp session_id=$session_id autonodeid=1 init=/sbin/init-krg"
    ) > $bootfile
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # NO OP
    :
}

case "$1" in
  start|restart|force-reload)
	log_daemon_msg "Starting $DESC"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  status)
       [ -e $bootfile ] && echo "Ok."
       ;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
